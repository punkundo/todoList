{"version":3,"sources":["components/AddNewTodo/index.jsx","components/TodoList/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["uuid","AddNewTodo","setNewTodos","todos","setShowAdd","editing","setEditing","level","useState","id","name","newTodo","setNewTodo","isEdit","setIsEdit","showAlert","setShowAlert","useEffect","onChangeTodo","e","target","value","className","htmlFor","type","onChange","hidden","map","onClick","index","findIndex","todo","trim","TodoList","deleteTodo","showAdd","handleChangeLevel","filterList","setFilterList","sortType","setSortType","sorting","length","getColor","sort","a","b","item","filterLevel","newTodos","filter","width","App","setTodos","indexLevel","lev","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a54ba52.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './AddNewTodo.css'\r\n\r\nlet uuid = 1;\r\n\r\nexport default function AddNewTodo({\r\n  setNewTodos, todos, setShowAdd, editing, setEditing, level\r\n}) {\r\n  const [newTodo, setNewTodo] = useState({\r\n    id: 0,\r\n    name: '',\r\n    level: 'Làm ngay'\r\n  })\r\n\r\n  const [isEdit, setIsEdit] = useState(false)\r\n  const [showAlert, setShowAlert] = useState(true)\r\n\r\n  useEffect(() => {\r\n    if (editing !== null) {\r\n      setNewTodo(editing)\r\n      setIsEdit(true)\r\n    }\r\n  }, [editing])\r\n\r\n  const onChangeTodo = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewTodo({\r\n      ...newTodo,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  const addNewTodo = () => {\r\n    if(newTodo.name.trim() === '') {\r\n      setShowAlert(false)\r\n      return \r\n    }\r\n    newTodo.id = uuid\r\n    setNewTodos([...todos, newTodo])\r\n    uuid += 1;\r\n    setNewTodo({\r\n      id: 0,\r\n      name: '',\r\n      level: 'Làm ngay'\r\n    })\r\n    setShowAlert(true)\r\n  }\r\n\r\n  const handleEdit = () => {\r\n    const index = todos.findIndex(todo => todo.id === newTodo.id)\r\n    todos[index] = newTodo\r\n    setNewTodo({\r\n      id: 0,\r\n      name: '',\r\n      level: 'Làm ngay'\r\n    })\r\n    setIsEdit(false)\r\n    setEditing(null)\r\n    setNewTodos([...todos])\r\n    setShowAlert(true)\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-new-todo\">\r\n      {/* <span onClick={() => setShowAdd(false)}>X</span> */}\r\n      <h3>{isEdit ? 'Sửa công việc' : 'Thêm công việc mới:'}</h3>\r\n\r\n      <label htmlFor=\"name\">Tên công việc:</label>\r\n      <input type=\"text\" name=\"name\" id=\"name\" value={newTodo.name} onChange={onChangeTodo} />\r\n      <h5 className=\"alert\" hidden={showAlert}>Không được để trống tên công việc</h5>\r\n\r\n      <label htmlFor=\"level\">Mức độ công việc:</label>\r\n      <select name=\"level\" id=\"level\" value={newTodo.level} onChange={onChangeTodo}>\r\n        {\r\n          level.map(level => (\r\n            <option value={level}>{level}</option>       \r\n          ))\r\n        }\r\n      </select>\r\n      <div className=\"btn-wrap\">\r\n        <button onClick={isEdit ? handleEdit : addNewTodo}>{isEdit ? 'SỬA' : 'THÊM'}</button>\r\n        <button onClick={() => setShowAdd(false)}>HUỶ BỎ</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState  } from 'react'\r\nimport './TodoList.css'\r\nconst TodoList = ({ todos, setShowAdd, showAdd, deleteTodo, setEditing, handleChangeLevel, setNewTodos, level, filterList, setFilterList }) => {\r\n  const [sortType, setSortType] = useState(false)\r\n  // const selectOption = [\r\n  //   'STT',\r\n  //   'Tên công việc',\r\n  //   'Mức độ'\r\n  // ]\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line \r\n    sorting()\r\n  }, [todos.length])\r\n\r\n  const getColor = (level) => {\r\n    if (level === \"Làm ngay\") return \"danger\"\r\n    else if (level === \"Phải làm nhưng chưa cần làm ngay\") return \"warning\"\r\n    else if (level === \"Làm bao giờ cũng được\") return \"success\"\r\n    else if (level === \"Không là chả sao\") return \"primary\"\r\n  }\r\n\r\n  const sorting = () => {\r\n    const newTodo = [...todos]\r\n    if(sortType === \"STT\") {\r\n      newTodo.sort((a,b) => {\r\n        return a.id > b.id ? 1 : -1\r\n      })\r\n    }\r\n    else if(sortType === \"Tên công việc\") {\r\n      newTodo.sort((a,b) => {\r\n        return a.name > b.name ? 1 : -1\r\n      })\r\n    }\r\n    else{\r\n      newTodo.sort((a,b) => {\r\n        const indexA = level.findIndex(item => item === a.level)\r\n        const indexB = level.findIndex(item => item === b.level)\r\n        return indexA > indexB ? 1 : -1\r\n      })\r\n    }\r\n    setNewTodos(newTodo)\r\n  }\r\n\r\n  const onChangeSort = (e) => {\r\n    setSortType(e.target.value)\r\n  }\r\n\r\n  const filterLevel = (level) => {\r\n    if(level === 'Tất cả') setFilterList(todos) \r\n    else {\r\n      const newTodos = todos.filter(item => item.level === level)\r\n      setFilterList(newTodos)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"to-do-list\">\r\n      <div className=\"to-do-list--top\">\r\n        <h3>Danh sách công việc:</h3>\r\n        <div className=\"wrapper-bottom\">        \r\n          <button onClick={() => sorting()} className=\"btn-add\">SẮP XẾP</button>\r\n          <select className=\"select_sort\" name=\"level\" id=\"level\" value={sortType} onChange={onChangeSort}>\r\n            \r\n              {/* selectOption.map(select => (\r\n                 <option value={select}>{select}</option>\r\n               )) */}\r\n              <option value=\"STT\">Sắp xếp theo ID</option>\r\n              <option value=\"Tên công việc\">Sắp xếp theo tên công việc</option>\r\n              <option value=\"Mức độ\">Sắp xếp theo mức độ</option>\r\n            \r\n          </select>\r\n        </div>\r\n      </div>\r\n      {\r\n        // todos.length === 0 ? <p>Chưa có công việc nào</p> :\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th width=\"70\">STT</th>\r\n                <th width=\"300\">Tên công việc</th>\r\n                <th width=\"300\">Mức độ</th>\r\n                <th width=\"200\">Hành động</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                filterList.map((value, index) => (\r\n                  <tr key={`${value.id}`}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{value.name}</td>\r\n                    <td>\r\n                      <span\r\n                        onClick={() => handleChangeLevel(value)}\r\n                        className={getColor(value.level)}\r\n                      >{value.level}</span>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"btn-wrap\">\r\n                        <button onClick={() => setEditing(value)}>SỬA</button>\r\n                        <button onClick={() => deleteTodo(value.id)}>XOÁ</button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n                )\r\n              }\r\n            </tbody>\r\n          </table>\r\n      }\r\n      <div className=\"wrapper-filter\">\r\n        <span className=\"filter\">Tag:</span>\r\n        <span className=\"filter\" onClick={() => filterLevel('Tất cả')}>#Tất cả</span>\r\n        <span className=\"filter\" onClick={() => filterLevel('Làm ngay')}>#Làm ngay</span>\r\n        <span className=\"filter\" onClick={() => filterLevel('Phải làm nhưng chưa cần làm ngay')}>#Phải làm nhưng chưa cần làm ngay</span>\r\n        <span className=\"filter\" onClick={() => filterLevel('Làm bao giờ cũng được')}>#Làm bao giờ cũng được</span>\r\n        <span className=\"filter\" onClick={() => filterLevel('Không là chả sao')}>#Không là chả sao</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList;\r\n","import { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport AddNewTodo from './components/AddNewTodo';\r\nimport TodoList from './components/TodoList';\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([])\r\n  const [showAdd, setShowAdd] = useState(false)\r\n  const [editing, setEditing] = useState(null)\r\n  const [filterList, setFilterList] = useState(todos)\r\n\r\n  useEffect(() => {\r\n    setFilterList(todos)\r\n  }, [todos])\r\n\r\n  const level = [\r\n    \"Làm ngay\",\r\n    \"Phải làm nhưng chưa cần làm ngay\",\r\n    \"Làm bao giờ cũng được\",\r\n    \"Không là chả sao\"\r\n  ]\r\n\r\n  const deleteTodo = (id) => {\r\n    setTodos(todos.filter(todo => todo.id !== id))\r\n  }\r\n\r\n  const handleChangeLevel = (todo) => {\r\n    const index = todos.findIndex(item => item.id === todo.id)\r\n    const indexLevel = level.findIndex(lev => lev === todo.level)\r\n    todo.level = level[(indexLevel + 1) % level.length]\r\n    const newTodo = [...todos]\r\n    newTodo[index] = todo\r\n    setTodos(newTodo)\r\n  }\r\n  \r\n  return (\r\n    <div className=\"app\">\r\n     <h3 className=\"app-title\">TODOLIST</h3>\r\n      <div className=\"app-content\">\r\n        <AddNewTodo level={level} setNewTodos = {setTodos} todos = {todos} setShowAdd={setShowAdd} setEditing={setEditing} editing={editing}/>\r\n        <TodoList setFilterList={setFilterList} filterList={filterList} handleChangeLevel={handleChangeLevel} level={level} setNewTodos = {setTodos} todos = {todos} setShowAdd={setShowAdd} showAdd={showAdd} deleteTodo={deleteTodo} setEditing={setEditing}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}